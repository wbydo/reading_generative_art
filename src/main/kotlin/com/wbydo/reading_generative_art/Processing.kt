/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.wbydo.reading_generative_art

import processing.core.*

class Processing : PApplet () {
    override fun settings() : Unit {
        size(800, 600)
        smooth()
    }
    override fun setup() : Unit {
        strokeWeight(1f)
        frameRate(3f)
    }

    override fun draw() : Unit {
        background(255f)

        val maxR = 280f
        val x0 = (width / 2).toFloat()
        val y0 = (height / 2).toFloat()

        val maxRound = 20 // 周回数
        val dTheta = 10
        var dr = maxR / (maxRound * (360 / dTheta))

        stroke(20f, 50f, 70f)
        noFill()

        var prevR = 0f

        val amp = random(100f)

        beginShape()
        for (theta in 0..(360 * maxRound) step dTheta) {
            val rad = radians(theta.toFloat())
            val x = x0 + prevR * cos(rad)
            val y = y0 + prevR * sin(rad)
            curveVertex(x, y)

            prevR = prevR + dr + (random(1f) - 0.5f) * amp
        }
        endShape()
    }

    fun run(args: Array<String>) : Unit
            = PApplet.main("com.wbydo.reading_generative_art.Processing")
}

fun main(args : Array<String>) : Unit = Processing().run(args)
